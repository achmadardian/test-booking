services:
  postgres:
    image: postgres:17.4
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    networks:
      - network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - "postgres:/var/lib/postgresql/17/data"

  migrate:
    image: migrate/migrate
    command: [
      "-path", "/migrations", "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable", "up"
    ]
    volumes:
      - ./api/migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - network

  api:
    build:
      context: ./api
    ports:
      - "9090:9090"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    networks:
      - network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/api"]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  network:

volumes:
  postgres: